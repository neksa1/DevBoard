
DevBoard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000184  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e10  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c5f  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000460  00000000  00000000  00001cff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00002160  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005a0  00000000  00000000  000021b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  00002758  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	44 c0       	rjmp	.+136    	; 0x180 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	2f e5       	ldi	r18, 0x5F	; 95
  fc:	8a ee       	ldi	r24, 0xEA	; 234
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x6>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x10>
 10a:	00 00       	nop
void HardwareSetup();

int main(void)
{
	        _delay_ms(300);
	        HardwareSetup();
 10c:	27 d0       	rcall	.+78     	; 0x15c <HardwareSetup>
	        Init();
 10e:	2e d0       	rcall	.+92     	; 0x16c <Init>
	// opto na PH3, PH4, PH5
	// opto na PL3, PL4, PL5
		
	_delay_ms(1000);
	PORTG = (0<<PG5);
	PORTE =(1<<PE1);
 110:	68 94       	set
 112:	dd 24       	eor	r13, r13
 114:	d1 f8       	bld	r13, 1
	PORTH = ((0<<PH3) | (1<<PH4) | (0<<PH5));
 116:	68 94       	set
 118:	ee 24       	eor	r14, r14
 11a:	e1 f8       	bld	r14, 1
 11c:	ff 24       	eor	r15, r15
 11e:	f3 94       	inc	r15
 120:	d0 e1       	ldi	r29, 0x10	; 16
	PORTL = ((1<<PL3) | (0<<PL4) | (1<<PL5));
 122:	0b e0       	ldi	r16, 0x0B	; 11
 124:	11 e0       	ldi	r17, 0x01	; 1
 126:	c8 e2       	ldi	r28, 0x28	; 40
 128:	ef e3       	ldi	r30, 0x3F	; 63
 12a:	fd e0       	ldi	r31, 0x0D	; 13
 12c:	23 e0       	ldi	r18, 0x03	; 3
 12e:	e1 50       	subi	r30, 0x01	; 1
 130:	f0 40       	sbci	r31, 0x00	; 0
 132:	20 40       	sbci	r18, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0x34>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0x3e>
 138:	00 00       	nop
	// relej na bitu PE1
	// opto na PH3, PH4, PH5
	// opto na PL3, PL4, PL5
		
	_delay_ms(1000);
	PORTG = (0<<PG5);
 13a:	14 ba       	out	0x14, r1	; 20
	PORTE =(1<<PE1);
 13c:	de b8       	out	0x0e, r13	; 14
	PORTH = ((0<<PH3) | (1<<PH4) | (0<<PH5));
 13e:	f7 01       	movw	r30, r14
 140:	d0 83       	st	Z, r29
	PORTL = ((1<<PL3) | (0<<PL4) | (1<<PL5));
 142:	f8 01       	movw	r30, r16
 144:	c0 83       	st	Z, r28
 146:	ff e9       	ldi	r31, 0x9F	; 159
 148:	26 e8       	ldi	r18, 0x86	; 134
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	f1 50       	subi	r31, 0x01	; 1
 14e:	20 40       	sbci	r18, 0x00	; 0
 150:	80 40       	sbci	r24, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0x52>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0x5c>
 156:	00 00       	nop
	_delay_ms(500);
	Init();
 158:	09 d0       	rcall	.+18     	; 0x16c <Init>

    }
 15a:	e6 cf       	rjmp	.-52     	; 0x128 <main+0x2e>

0000015c <HardwareSetup>:
#include <avr/iom2560.h>


void HardwareSetup()
{
	DDRG = 0xFF; // relej na bitu PG5
 15c:	8f ef       	ldi	r24, 0xFF	; 255
 15e:	83 bb       	out	0x13, r24	; 19
	DDRE = 0xff; // relej na bitu PE1
 160:	8d b9       	out	0x0d, r24	; 13
	DDRH = 0xff; // opto na PH3, PH4, PH5
 162:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
	DDRL = 0xff; // opto na PL3, PL4, PL5
 166:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
 16a:	08 95       	ret

0000016c <Init>:
}

void Init()
{
	PORTG = 0b00100000;
 16c:	80 e2       	ldi	r24, 0x20	; 32
 16e:	84 bb       	out	0x14, r24	; 20
	PORTE = 0b00000000;
 170:	1e b8       	out	0x0e, r1	; 14
	PORTH = ((1<<PH3) | (1<<PH5));
 172:	88 e2       	ldi	r24, 0x28	; 40
 174:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
	PORTL = 0b00010000;
 178:	80 e1       	ldi	r24, 0x10	; 16
 17a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
 17e:	08 95       	ret

00000180 <_exit>:
 180:	f8 94       	cli

00000182 <__stop_program>:
 182:	ff cf       	rjmp	.-2      	; 0x182 <__stop_program>
